{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\JapaneseLearning\\\\japaneselearning\\\\src\\\\FlashCards.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport FlashCard from './FlashCard';\nimport { FlashCardSets } from './Data/FlashCardSets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FlashCards() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let deck = FlashCardSets[id];\n  const [activeCardId, setActiveCardId] = useState(0);\n  let lastId = deck.length;\n\n  function prevCard() {}\n\n  function nextCard() {\n    if (activeCardId < lastId) {\n      //document.getElementById(activeCardId).style={'visibility': 'hidden'}\n      setActiveCardId(prevState => ({\n        activeCardId: prevState.activeCardId + 1\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexbox-row\",\n    children: [deck.map(card => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: card,\n        style: {\n          'visibility': 'visible'\n        },\n        children: /*#__PURE__*/_jsxDEV(FlashCard, {\n          card: card\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => prevCard(),\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => nextCard(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), activeCardId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FlashCards, \"OKA+8qMqkmd8UVvBML4POw3dryM=\", false, function () {\n  return [useParams];\n});\n\n_c = FlashCards;\nexport default FlashCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlashCards\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/JapaneseLearning/japaneselearning/src/FlashCards.js"],"names":["React","useState","useEffect","useParams","FlashCard","FlashCardSets","FlashCards","id","deck","activeCardId","setActiveCardId","lastId","length","prevCard","nextCard","prevState","map","card"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,sBAA5B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,MAAI;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAtB;AACA,MAAIK,IAAI,GAAGH,aAAa,CAACE,EAAD,CAAxB;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIU,MAAM,GAAGH,IAAI,CAACI,MAAlB;;AAEA,WAASC,QAAT,GAAoB,CACnB;;AAED,WAASC,QAAT,GAAoB;AAChB,QAAGL,YAAY,GAACE,MAAhB,EAAuB;AACnB;AACAD,MAAAA,eAAe,CAACK,SAAS,KAAK;AAC1BN,QAAAA,YAAY,EAAEM,SAAS,CAACN,YAAV,GAAuB;AADX,OAAL,CAAV,CAAf;AAGH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eAMKD,IAAI,CAACQ,GAAL,CAASC,IAAI,IAAI;AACd,0BACI;AAAK,QAAA,EAAE,EAAEA,IAAT;AAAe,QAAA,KAAK,EAAE;AAAC,wBAAc;AAAf,SAAtB;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANA,CANL,eAaI;AAAQ,MAAA,OAAO,EAAE,MAAMJ,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,EAeKL,YAfL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GArCQH,U;UACQH,S;;;KADRG,U;AAuCT,eAAeA,UAAf","sourcesContent":["import './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport FlashCard from './FlashCard';\r\nimport {FlashCardSets} from './Data/FlashCardSets';\r\n\r\nfunction FlashCards() {\r\n    let { id } = useParams();\r\n    let deck = FlashCardSets[id];\r\n    const [activeCardId, setActiveCardId] = useState(0);\r\n    let lastId = deck.length;\r\n\r\n    function prevCard() {\r\n    }\r\n\r\n    function nextCard() {\r\n        if(activeCardId<lastId){\r\n            //document.getElementById(activeCardId).style={'visibility': 'hidden'}\r\n            setActiveCardId(prevState => ({\r\n                activeCardId: prevState.activeCardId+1\r\n            }))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"flexbox-row\">\r\n            {/*\r\n            <div id=\"activeCard\">\r\n                <FlashCard card={deck[0]}/>\r\n            </div>\r\n            */}\r\n            {deck.map(card => {\r\n                return (\r\n                    <div id={card} style={{'visibility': 'visible'}}>\r\n                        <FlashCard card={card}/>\r\n                    </div>\r\n                );\r\n            })}\r\n            <button onClick={() => prevCard()}>Prev</button>\r\n            <button onClick={() => nextCard()}>Next</button>\r\n            {activeCardId}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlashCards;"]},"metadata":{},"sourceType":"module"}